(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{58:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"互換性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#互換性","aria-hidden":"true"}},[t._v("#")]),t._v(" 互換性")]),a("p",[t._v("ここいらで、ちょっと落ち着いて仕様の話をしたいと思います。各ブラウザーでAPIはある程度同じように使えて、先の例のタイマーも、同じコードでChromeとFirefoxの両方で動きます。")]),a("p",[t._v("が、実装状況だけじゃなくて、実装方針もちょっとずつ違ってたりします。")]),a("p",[t._v("Chromeではグローバルの "),a("code",[t._v("chrome")]),t._v(" オブジェクト以下にAPIが用意されています。例えば今回利用したAPIだと "),a("code",[t._v("chrome.runtime.sendMessage()")]),t._v(" というものを利用します。")]),a("p",[t._v("Firefoxもグローバルに "),a("code",[t._v("chrome")]),t._v(" オブジェクトが用意されており、これはChromeのAPIとある程度の互換性を持っています。さっきも "),a("code",[t._v("chrome.runtime.sendMessage()")]),t._v(" が動きましたね。ただし完全ではなく、一部実装されていなかったり、あるいは逆にFirefoxにしかないものもあります。")]),a("p",[t._v("加えて、Firefoxはグローバルに "),a("code",[t._v("browser")]),t._v(" というオブジェクトも用意しています。これも "),a("code",[t._v("chrome")]),t._v(" と同様の機能のAPI群なのですが、実はインターフェイス（書き方）がちょっと違っています。どう違うのかはいったん置いておきます。")]),a("p",[t._v("最後にEdgeですが、ChromeのAPIと互換のものが、やはり不完全ながら "),a("code",[t._v("chrome")]),t._v(" ではなく "),a("code",[t._v("browser")]),t._v(" 配下に用意されています。 "),a("code",[t._v("chrome")]),t._v(" も存在するんだけど、無関係の別物っぽい。何だろこれ。ともかくEdge用には "),a("code",[t._v("browser.runtime.sendMessage()")]),t._v(" のように書く必要があります。")]),a("h3",{attrs:{id:"標準api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#標準api","aria-hidden":"true"}},[t._v("#")]),t._v(" 標準API")]),a("p",[t._v("Firefoxが2種類のAPIを用意してる件について。ブラウザー拡張のAPIは各ベンダーがそれぞれ用意してる感じなんだけど、W3Cによる標準化も試みられているようです。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://discourse.mozilla.org/t/w3c-and-webextensions-apis/20421",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3C and WebExtensions APIs - Add-ons / Announcements - Mozilla Discourse")])])]),a("p",[t._v("で、Firefoxの "),a("code",[t._v("browser")]),t._v(" はそれに従っているようです。（どうかな違うかも？）")]),a("h3",{attrs:{id:"promise化されたインターフェイス"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise化されたインターフェイス","aria-hidden":"true"}},[t._v("#")]),t._v(" Promise化されたインターフェイス")]),a("p",[a("code",[t._v("chrome")]),t._v(" はコールバックが必要な場合に引数で受け取るのですが、 "),a("code",[t._v("browser")]),t._v(" の方は代わりにPromiseオブジェクトを返して、そちらで制御するようになります。すると、ES2017の "),a("code",[t._v("async")]),t._v("/"),a("code",[t._v("await")]),t._v(" を使った読みやすいコードにすることが可能です。")]),a("p",[t._v("例として、記憶した情報を読み出す処理を考えます。 "),a("code",[t._v("storage.local.get()")]),t._v(" というものを使います。（これは "),a("code",[t._v('"storage"')]),t._v(" を "),a("code",[t._v("manifest.json")]),t._v(" の "),a("code",[t._v('"permissions"')]),t._v(" で設定する必要があります。）")]),a("p",[t._v("まずはChromeで動くコード。")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("chrome"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storage"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"item1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"item2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'# result'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("Firefoxもこれで動きます。")]),a("p",[t._v("ではそのFirefoxの別の選択肢、 "),a("code",[t._v("browser")]),t._v(" の方も見てみましょう。Promiseになります。")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("browser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storage"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"item1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"item2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("then")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'# result'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("まあこれ見るとそんなに変わってないね。でも、Promiseの場合は "),a("code",[t._v("async")]),t._v(" な関数の中で "),a("code",[t._v("await")]),t._v(" を使って、こう書けるんです。")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("await")]),t._v(" browser"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storage"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"item1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"item2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'# result'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("これならまっすぐになって、だいぶ見やすいんじゃないでしょうか。見やすいよね。")]),a("h3",{attrs:{id:"コードを共通化する"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#コードを共通化する","aria-hidden":"true"}},[t._v("#")]),t._v(" コードを共通化する")]),a("p",[t._v("Promiseの方が使いやすいので、Firefoxに寄せる方針です。")]),a("p",[t._v("最近こちらに書いたのでどうぞ。他にEdge対応とかも。")]),a("ul",[a("li",[a("a",{attrs:{href:"https://ginpen.com/2018/04/22/browser-extension-polyfill/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chrome、Edge、Firefox互換のブラウザー拡張を作るポリフィル。 | Ginpen.com")])])])])}],!1,null,null,null);s.default=e.exports}}]);